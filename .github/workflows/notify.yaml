name: notify
env:
  BRANCH_NAME: ${{ (github.head_ref && github.head_ref) || (github.ref_name && github.ref_name) }}
run-name: ${{ github.workflow }} (${{ (github.head_ref && github.head_ref) || (github.ref_name && github.ref_name)  }}) [${{ github.event_name }}.${{ github.event.action }}]
on:
  pull_request:
    types: 
      - opened
      - edited
      - closed
      - reopened
      - synchronize
  pull_request_target:
      types: 
      - opened
      - edited
      - closed
      - reopened
      - synchronize
  pull_request_review:
  pull_request_review_comment:
  workflow_dispatch:
  
jobs:
  pull_request:
    runs-on: ubuntu-latest
    steps:
      - name: pull_request and system improvements
        if: ${{ github.event_name == 'pull_request' && contains( env.BRANCH_NAME , 'system/') }}
        run: echo "description=ウェブサイトのシステムの更新がリクエストされました" >> $GITHUB_ENV
      - name: pull_request and an article edit
        if: ${{ github.event_name == 'pull_request' && contains( env.BRANCH_NAME , 'article/') }}
        run: echo "description=新規記事の投稿がリクエストされました" >> $GITHUB_ENV
      - name: pull_request and other
        if: ${{ github.event_name == 'pull_request' && !env.description }}
        run: echo "description=更新がリクエストされました" >> $GITHUB_ENV
      - name: return description
        run: echo ${{ env.description }}

  pull_request_target:
    if: ${{ !env.description }}
    runs-on: ubuntu-latest
    steps:
      - name: pull_request and system improvements
        if: ${{ github.event_name == 'pull_request_target' && contains( env.BRANCH_NAME , 'system/') }}
        run: echo "description=ウェブサイトのシステムの更新がリクエストされました" >> $GITHUB_ENV
      - name: pull_request and an article edit
        if: ${{ github.event_name == 'pull_request_target' && contains( env.BRANCH_NAME , 'article/') }}
        run: echo "description=新規記事の投稿がリクエストされました" >> $GITHUB_ENV
      - name: pull_request and other
        if: ${{ github.event_name == 'pull_request_target' && !env.description }}
        run: echo "description=更新がリクエストされました" >> $GITHUB_ENV
      - name: return description
        run: echo ${{ env.description }}
        
        
